什么是响应式开发？
	一套站点适配多种屏幕（移动设备屏幕越来越大）
	原理：利用媒体查询

终端的划分
	css3中的Media Query（媒介查询）
		//0 -768px   移动端 超小屏设备
		//768px - 992px  pad  小屏幕设备
		//992px - 1200px  中等屏幕设备
		//1200px - 1920px 宽屏设备
	@media screen and (min-width:768px){

	}
	
bootstrap框架（UI界面框架  有预制组件框架）
	使用bootstrap框架之前，必须先引入jQuery
	不能再ie中打开file形式下的的两个兼容的js插件 ，需要用http和https形式打开

	container  布局容器 响应式容器  没有高度   默认居中  有15px内边距（为页面内容和栅格系统提供的容器）
	container-fluid  宽占满屏幕  即width为100%

	栅格系统：
		row（行） 通过为.row元素设置负值magin可以清除.container的内边距，并不是真正的去除，而是通过自身的拉伸 magin-left为-15px     magin-right为-15px   一行12列

		 col（列）： 在屏幕尺寸相对应情况下水平排列，在屏幕尺寸不对应情况下堆叠在一起  每一列有默认15px的左右内边距
		 并且可以嵌套
			超小屏幕   col-xs-*   针对超小屏幕及以上生效
			小屏幕  col-sm-*   针对小屏幕及以上生效
			中等屏  col-md-*     针对中等屏幕及以上生效
			宽屏   col-lg-*   针对大屏幕及以上生效
		
	组件：collapse js 组件
                	//data-toggle 属性内容就是  组件的名称
                	//当你申明了这个属性的时候
                	//就告诉bootstrap这是一个手风琴菜单组件
               	// 初始化这个组件
                	//控制一个盒子  让它显示或隐藏
                	//怎么样控制
                	//data-target 内容就是我们指定要控制的那个盒子
                	//（当这个按钮是A的时候那么它还可以以通过 href来控制 指明ID就可以）
                	//定义我们需要控制哪个盒子
                	//可以通过 class  也可以通过ID


zepto.js   与jQuery有类似的api，用于高级浏览器，轻量级
