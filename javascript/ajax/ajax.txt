AJAX：在不用刷新网页的情况下 ，更新网页的信息，核心是XMLHttpRequest 对象

	var xhr = new XMLHttpRequest() 存在兼容性
	兼容写法：
		function createXHR() {
			if(typeof  XMLHttpRequest  !=  "undefined"){
				return new XMLHttpRequest();
			}else if(typeof  ActiveXObject  != "undefined"){
				if(typeof  arguments.callee.activeXString  != "undefined"){
					var versions = ["MSXML2.XMLHttp.6.0","MSXML2.XMLHttp.3.0","MSXML2.XMLHttp"],i,len;
					for(i = 0 ; len = versions.length ;i < versions.length ; i++){
						try{
							new  ActiveXObject(versions[i]);
							arguments.callee.activeXString  =  versions[i];
							break;
						}catch(ex){
							//跳过
						}
					}
				}
				return  new ActiveXObject(arguments.callee.activeXString);
			} else {
				throw  new  Error("你的浏览器不支持AJAX");
			}
		}

	XHR的用法：var xhr  =  new createXHR();
		open方法：会启动一个请求，但没有发送请求，该方法的url是相对于当前页面
			xhr.open("get/post",url,true/false)最后一个参数是指是否异步
		send方法：发送请求
		responseText ：作为响应主体被返回的文本。
 		responseXML ：如果响应的内容类型是 "text/xml" 或 "application/xml" ，这个属性中将保存包含着响应数据的 XML 				DOM 文档。
 		status ：响应的 HTTP 状态。在接收到响应后， 第一步是检查 status 属性， 以确定响应已经成功返回。 一般来说， 			可以将 HTTP状态代码为 200 作为成功的标志。
 		statusText ：HTTP 状态的说明。
	
	在异步状态下，可以检测 XHR 对象的 readyState 属性，该属性表示请求/响应过程的当前活动阶段。
		0 ：未初始化。尚未调用 open() 方法。
 		1 ：启动。已经调用 open() 方法，但尚未调用 send() 方法。
 		2 ：发送。已经调用 send() 方法，但尚未接收到响应。
 		3 ：接收。已经接收到部分响应数据。
 		4 ：完成。已经接收到全部响应数据，而且已经可以在客户端使用了。

	get/post：
		get一般是url提交请求，比如：demo.php?name=LEE&age=18
		post一般是web表单提交<form action="#"></form>
	
	响应头部信息->服务器返回的信息，客户端可以获取，但不可以设置
	请求头信息->客户端发送的信息，客户端可以设置，但不可以获取

	获取全部响应头信息：xhr.getResponseHeader()
	获取单个响应头信息：xhr.getResponseHeader("Content-Type")
	设置请求头部信息：setResponseHeader("myheader","LEE")  //设置请求头部信息，一般没什么用，在post提交请求时有用

	get请求：最常见的请求信息，最常用于向服务器查询某些信息
	中文乱码问题  AJAX返回的数据其实是UTF-8，最简单的方式，将文件全部设置为UTF-8
	特殊字符，需要通过encodeURICompone来编码解决

常见协议：
			1、HTTP HTTPS 超文本传输协议
			2、FTP 文件传输协议
			3、SMTP 简单邮件传输协议

网站是基于HTTP协议  
	HTTP协议是由从客户机到服务器的请求（Request）和从服务期到客户机的响应（Response）进行了约束和规范
	即 HTTP协议主要由请求和响应构成